import std.*;

public protocol PinProtocol{
    on: {int pin;}
    off: {int pin;}
}

void request_info(shared chan<PinProtocol>.write c, int pin){
    c.write(new PinProtocol{on: pin = pin});

//    for (int i=0; i<5; i++){
//        c.write(new PinProtocol{on: pin = pin});
//        jl_sleep(3000);
//        c.write(new PinProtocol{off: pin = pin});
//        jl_sleep(3000);
//    }
}

void get_info(chan<PinProtocol>.read in, int msg_pin){
    
    PinProtocol v = in.read();
    switch(v){
        case on: 
            int i = 0;
            int state_info = 0;
            int[] arduiono_msg = new int[5]; 
            while (i < 5){
                arduiono_msg[i] = get_pin_info(msg_pin);
                jl_sleep(500);
                i = i + 1;
            }
            // print message
            System.out.print("Received Message: ");
            for (int i=0; i<5; i++){
                System.out.print(arduiono_msg[i]);
            }
            System.out.println();
    }



    while (true){
        PinProtocol v = in.read();
        switch(v){
            case on: 
                set_high_pi4(v.pin);
                break;
            case off: 
                set_low_pi4(v.pin);
                break;
        }
    }
}

public void main(string[] args){
    pi4_println("******");
    shared write chan<PinProtocol> c;
    par{
        //playLED(c.write, 21);
        playLED(c.write, 16);
        RaspberryPi(c.read);
    }
}

